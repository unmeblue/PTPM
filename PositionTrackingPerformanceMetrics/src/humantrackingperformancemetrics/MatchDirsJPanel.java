/*
 * This is public domain software, however it is preferred
 * that the following disclaimers be attached.
 * 
 * Software Copywrite/Warranty Disclaimer
 * 
 * This software was developed at the National Institute of Standards and
 * Technology by employees of the Federal Government in the course of their
 * official duties. Pursuant to title 17 Section 105 of the United States
 * Code this software is not subject to copyright protection and is in the
 * public domain. NIST Real-Time Control System software is an experimental
 * system. NIST assumes no responsibility whatsoever for its use by other
 * parties, and makes no guarantees, expressed or implied, about its
 * quality, reliability, or any other characteristic. We would appreciate
 * acknowledgement if the software is used. This software can be
 * redistributed and/or modified freely provided that any derivative works
 * bear some notice that they are derived from it, and any modified
 * versions bear some notice that they have been modified.
 * 
 */

package humantrackingperformancemetrics;

import java.awt.Dialog;
import java.awt.Frame;
import java.io.File;
import java.io.FileOutputStream;
import java.io.PrintStream;
import javax.swing.JDialog;
import javax.swing.JFileChooser;

/**
 *
 * @author William Shackleford<shackle@nist.gov>
 */
public class MatchDirsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MatchSetJPanel
     */
    public MatchDirsJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaSutDirs = new javax.swing.JTextArea();
        jButtonBrowseGTDir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaGTDirs = new javax.swing.JTextArea();
        jButtonBrowseSuTDir = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jButtonOK = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldSaveFile = new javax.swing.JTextField();
        jButtonBrowseSaveFile = new javax.swing.JButton();

        jLabel1.setText("Directories to search for Ground Truth CSV Files:");

        jTextAreaSutDirs.setColumns(20);
        jTextAreaSutDirs.setRows(5);
        jScrollPane1.setViewportView(jTextAreaSutDirs);

        jButtonBrowseGTDir.setText("Browse For GT Directory");
        jButtonBrowseGTDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseGTDirActionPerformed(evt);
            }
        });

        jLabel2.setText("Directories to search for System Under Test CSV Files:");

        jTextAreaGTDirs.setColumns(20);
        jTextAreaGTDirs.setRows(5);
        jScrollPane2.setViewportView(jTextAreaGTDirs);

        jButtonBrowseSuTDir.setText("Browse For SUT Directory");
        jButtonBrowseSuTDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseSuTDirActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jLabel3.setText("File to save found matches to:");

        jButtonBrowseSaveFile.setText("Browse for Matches Save File");
        jButtonBrowseSaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseSaveFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldSaveFile)
                        .addGap(10, 10, 10)
                        .addComponent(jButtonBrowseSaveFile))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                                .addGap(20, 20, 20)
                                .addComponent(jButtonBrowseGTDir))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButtonOK)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonCancel))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonBrowseSuTDir)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonBrowseGTDir)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(jButtonBrowseSuTDir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCancel)
                            .addComponent(jButtonOK))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldSaveFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonBrowseSaveFile))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        this.cancelled = false;
        this.dialog.setVisible(false);
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.cancelled = true;
        this.dialog.setVisible(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonBrowseGTDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseGTDirActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setMultiSelectionEnabled(true);
        int ret = chooser.showOpenDialog(this);
        if(ret == JFileChooser.APPROVE_OPTION) {
            File fa[] = chooser.getSelectedFiles();
            for(File f : fa) {
                if(null == f || !f.isDirectory() || !f.exists()) {
                    continue;
                }
                this.jTextAreaGTDirs.append(f.getPath()+"\n");
            }
        } 
    }//GEN-LAST:event_jButtonBrowseGTDirActionPerformed

    private void jButtonBrowseSuTDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseSuTDirActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setMultiSelectionEnabled(true);
        int ret = chooser.showOpenDialog(this);
        if(ret == JFileChooser.APPROVE_OPTION) {
            File fa[] = chooser.getSelectedFiles();
            for(File f : fa) {
                if(null == f || !f.isDirectory() || !f.exists()) {
                    continue;
                }
                this.jTextAreaSutDirs.append(f.getPath()+"\n");
            }
        } 
    }//GEN-LAST:event_jButtonBrowseSuTDirActionPerformed

    private void jButtonBrowseSaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseSaveFileActionPerformed
        try {
            JFileChooser chooser = new JFileChooser();
            int ret = chooser.showSaveDialog(this);
            if (ret == JFileChooser.APPROVE_OPTION) {
                File f = chooser.getSelectedFile();
                this.jTextFieldSaveFile.setText(f.getCanonicalPath());
            }
        } catch (Exception exception) {
            exception.printStackTrace();
        }
    }//GEN-LAST:event_jButtonBrowseSaveFileActionPerformed

    
    private JDialog dialog = null;
    private boolean cancelled = false;
    
    static public File showDialog(Frame parent, String title) {
        try {
            MatchDirsJPanel matchSetJPanel = new MatchDirsJPanel();
            File matchesDir = new File(System.getProperty("user.home"), ".htpm_matches");
            matchesDir.mkdirs();
            File ftmp = File.createTempFile("matches", ".csv",matchesDir);
            JDialog dialog = new JDialog(parent, title, Dialog.ModalityType.APPLICATION_MODAL);
            matchSetJPanel.setVisible(true);
            matchSetJPanel.dialog = dialog;
            matchSetJPanel.jTextFieldSaveFile.setText(ftmp.getCanonicalPath());
            dialog.add(matchSetJPanel);
            dialog.pack();
        //dialog.setModal(Dialog.ModalityType.APPLICATION_MODAL);
            //OR, you can do the following...
            //JDialog dialog = new JDialog();
            //dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);

            //dialog.setBounds(transform_frame.getBounds());
            dialog.setVisible(true);
            if (matchSetJPanel.cancelled) {
                return null;
            }
            File fileOut = new File(matchSetJPanel.jTextFieldSaveFile.getText());
            File gtDirList = File.createTempFile("gtdirlist", ".txt",matchesDir);
            PrintStream ps = new PrintStream(new FileOutputStream(gtDirList));
            ps.println(matchSetJPanel.jTextAreaGTDirs.getText());
            ps.close();
            File sutDirList = File.createTempFile("sutdirlist", ".txt",matchesDir);
            ps = new PrintStream(new FileOutputStream(sutDirList));
            ps.println(matchSetJPanel.jTextAreaSutDirs.getText());
            ps.close();
            HTPM_JFrame.findMatches(gtDirList,sutDirList, fileOut);
        } catch (Exception exception) {
            exception.printStackTrace();
        }
        return null;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBrowseGTDir;
    private javax.swing.JButton jButtonBrowseSaveFile;
    private javax.swing.JButton jButtonBrowseSuTDir;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaGTDirs;
    private javax.swing.JTextArea jTextAreaSutDirs;
    private javax.swing.JTextField jTextFieldSaveFile;
    // End of variables declaration//GEN-END:variables
}
